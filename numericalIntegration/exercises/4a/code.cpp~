#include <iostream>
#include <stdio.h>
#include <math.h>
#include "../../polylib.h"
#include <stdlib.h>



using namespace std;
using namespace polylib;

double *dvector(int np);
void *func(int np, double *z, double *p);
double integr(int np, double *w, double *p);


main()
{

  int np[2] = {8, 8};

  double *z1,*w1,*p1;
  double *z2,*w2,*p2;
  
  z1 = dvector(np[0]);
  w1 = dvector(np[0]);
  p1 = dvector(np[0]);
  
  z2 = dvector(np[1]);
  w2 = dvector(np[1]);
  p2 = dvector(np[1]);
  
  double *z[2] = {z1,z2};
  double *w[2] = {w1,w2};
  double *p[2] = {p1,p2};

  double sum = 0.0;
  for(int j=0; j<2; j++)
    {
      // get zeros and weights
      zwgll(z[j],w[j], np[j]);
      
      // calculate p=z^6 at np points z 
      func(np[j], z[j], p[j]);
      
      // integrate p over [-1,1] 
      sum = sum + integr(np[j], w[j], p[j] );
      
  // generate output
      /*cout <<"\nQ = " << np[j] << "\n\n";
      for(int i = 0; i<np[j]; i++ )
	{
	  cout <<"z = " << z[j][i] << " en p = " << p1[i]<<  "\n";
	  }*/
    }
  cout << "\nIntegral = " << sum  << "\n";
   

}

double *dvector(int n)
{
  double *v;

  v = (double *)malloc(n*sizeof(double));
  return v;
}

void *func(int np, double *z, double *p)
{  
   register int pow = 6;
  
   for(int i = 0;i<np;i++){
    p[i] = 1;
    for(int j = 0; j<pow; j++ ){
      p[i] = p[i]*z[i]; 
    }
  } 
}

double integr(int np, double *w, double *p)
{
  register double sum = 0.;

  for(int i=0;i<np;i++){
    sum = sum + p[i]*w[i]; 
  }
  return sum;
}
